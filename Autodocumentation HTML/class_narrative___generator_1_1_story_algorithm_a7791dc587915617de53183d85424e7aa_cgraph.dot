digraph "Narrative_Generator.StoryAlgorithm.BFSTraversing"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="Narrative_Generator.Story\lAlgorithm.BFSTraversing",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="A method in which we sequentially create a story graph, node by node, starting at the root,..."];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.Goal\lManager.ControlToAchieveGoalState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_goal_manager.html#a03884832e1dbd91103e5fa64610bcad7",tooltip="Checks the achievement of any of the goal conditions (in state)."];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Story\lNode.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a0b05d9dcfa6423f4247cceba1ad62eef",tooltip="Method for comparing two StoryNode instance."];
  Node3 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.World\lDynamic.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a3b7c061efc8d23cb561bc940800e6a48",tooltip="Method for comparing two WorldDynamic instance."];
  Node4 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.World\lStatic.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#aac70b40850296f313ceaf4f0bcad1549",tooltip="Method for comparing two WorldStatic instance."];
  Node5 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.World\lStatic.GetTurnNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#addfc6eedbd7e250cca63bec54ef714a7",tooltip="Returns the turn number."];
  Node4 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.World\lDynamic.GetStaticWorldPart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#af84d5b47653c246de39ebfa7b791826a",tooltip="Returns a component with the static part of the state of this storyworld."];
  Node1 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Story\lNode.GetActiveAgent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#ad12b92efc9b06a4ee82d4f975a4c5f1d",tooltip="Returns information about the active agent."];
  Node1 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Story\lAlgorithm.GetActualAgentNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a13d33bb6e24a076bd720a5046193bad4",tooltip="A method that returns the index of the agent that should perform the action."];
  Node1 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.World\lDynamic.GetIndexOfAgent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#aff1029d114e5fd8a0dea75c2cc001af8",tooltip="Returns the index of the specified agent in the list of agents."];
  Node1 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.Story\lNode.GetLinks",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a97c8781334050ca7df409f2b46584660",tooltip="Returns a list of all nodes connected to this node."];
  Node1 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.Story\lGraph.GetNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#aa2c2f7846cf71a52d3f669407a12d1c4",tooltip="Returns the specified node from the storygraph."];
  Node1 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.Story\lGraph.GetNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a87cf32c4d674ebd68744e77652666b57",tooltip="Returns a list of nodes in the storygraph."];
  Node1 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="Narrative_Generator.Story\lGraph.GetRoot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a3100813aee5d85fa50becce42ddf5e8e",tooltip="Returns the root node of the storygraph."];
  Node1 -> Node15 [color="steelblue1",style="solid"];
  Node15 [label="Narrative_Generator.Story\lNode.GetWorldState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#ab3e318148d1f96d599db8611347b42fb",tooltip="Returns the storyworld state stored by the node."];
  Node1 -> Node16 [color="steelblue1",style="solid"];
  Node16 [label="Narrative_Generator.Story\lAlgorithm.Step",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14fcd8daa5dd92cef5b985a754ffa59e",tooltip="Convergence in turn asks agents for actions, checks them, applies them, counteracts them,..."];
  Node16 -> Node17 [color="steelblue1",style="solid"];
  Node17 [label="Narrative_Generator.Storyworld\lConvergence.ActionRequest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a371ff7aeb10e59e3c51971228ea94378",tooltip="The agent updates his beliefs, calculates a plan, chooses an action, assigns variables to it,..."];
  Node17 -> Node18 [color="steelblue1",style="solid"];
  Node18 [label="Narrative_Generator.Storyworld\lConvergence.ActionControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab63aeb27180c660c584261acd9e7051d",tooltip="Checking the action for violation of the established constraints and the reachability of the goal sta..."];
  Node18 -> Node19 [color="steelblue1",style="solid"];
  Node19 [label="Narrative_Generator.Storyworld\lConvergence.ActionCounteract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#add86637023cb151bb7e6ec3483cd500a",tooltip="A method that implements the system's response to an action that should not be applied."];
  Node19 -> Node20 [color="steelblue1",style="solid"];
  Node20 [label="Narrative_Generator.Storyworld\lConvergence.ApplyAction",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a445039b4f3958e2e00953e09ed37bde9",tooltip="The probability of success of the action is calculated, and if successful, it is applied."];
  Node20 -> Node21 [color="steelblue1",style="solid"];
  Node21 [label="Narrative_Generator.Story\lGraph.CreateNewNode",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a7e65058643b6db885dcb604cb6b8896b",tooltip="Create a new node for the storygraph and inserts it."];
  Node21 -> Node24 [color="steelblue1",style="solid"];
  Node24 [label="Narrative_Generator.World\lDynamic.Clone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#ab9b01377b7edd3dce12d65b8af313d01",tooltip="Method for cloning an WorldDynamic instance."];
  Node21 -> Node33 [color="steelblue1",style="solid"];
  Node33 [label="Narrative_Generator.World\lDynamic.GetAgentByName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a9f88b0e9a4ab518930e6041610402747",tooltip="Returns the first founded agent with the specified name."];
  Node21 -> Node15 [color="steelblue1",style="solid"];
  Node19 -> Node45 [color="steelblue1",style="solid"];
  Node45 [label="Narrative_Generator.CSP\l_Module.AssignVariables",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_c_s_p___module.html#a004316ef422555e62376b259b9fc8e1d",tooltip="A method that assigns parameters to an action."];
  Node45 -> Node33 [color="steelblue1",style="solid"];
  Node45 -> Node46 [color="steelblue1",style="solid"];
  Node46 [label="Narrative_Generator.World\lDynamic.GetAgents",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a4ab92e373f7498899df96f08e78b83e0",tooltip="Returns a list of all agents."];
  Node45 -> Node47 [color="steelblue1",style="solid"];
  Node47 [label="Narrative_Generator.World\lStatic.GetConnectionStatus",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#a9065e3f9e575c62cd237a9cf9078ba38",tooltip="Returns information about whether the rule about the presence of paths (connections) between location..."];
  Node45 -> Node48 [color="steelblue1",style="solid"];
  Node48 [label="Narrative_Generator.World\lDynamic.GetLocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a08a6971e9e037b7bc26cb07ed4bc7a4f",tooltip="Returns a location from the list of locations if the key (the static part of the location state) matc..."];
  Node45 -> Node49 [color="steelblue1",style="solid"];
  Node49 [label="Narrative_Generator.World\lDynamic.GetLocationByName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a43619eb102a56e16a22a5aa5d5b7c1b0",tooltip="Returns a location from the list of locations if the specified name matches the name of the location."];
  Node45 -> Node50 [color="steelblue1",style="solid"];
  Node50 [label="Narrative_Generator.Location\lStatic.GetName",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_location_static.html#a3a196080501e30adb03f127eba710d47",tooltip="Method that returns the name of the location."];
  Node45 -> Node51 [color="steelblue1",style="solid"];
  Node51 [label="Narrative_Generator.World\lDynamic.GetRandomLocationWithout",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a3d555bba82cd7d78d3656e0ca2d9cd10",tooltip="A method that returns a random location, excluding the specified one."];
  Node51 -> Node49 [color="steelblue1",style="solid"];
  Node45 -> Node52 [color="steelblue1",style="solid"];
  Node52 [label="Narrative_Generator.World\lStatic.GetSetting",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#ad19d52cc2e6443e1d79d6edbd5eef9ea",tooltip="Returns information about the current setting."];
  Node45 -> Node7 [color="steelblue1",style="solid"];
  Node45 -> Node53 [color="steelblue1",style="solid"];
  Node53 [label="Narrative_Generator.World\lDynamic.SearchAgentAmongLocations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#afa3a27662c29eaa346633550fc179392",tooltip="Returns the static part (name) of the location where the searched agent is located."];
  Node19 -> Node54 [color="steelblue1",style="solid"];
  Node54 [label="Narrative_Generator.Plan\lAction.CheckPreconditions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_plan_action.html#ae3d98713bc16f7aece503c8775216a26",tooltip="An abstract method that determines the fulfillment of the preconditions necessary to perform an actio..."];
  Node19 -> Node55 [color="steelblue1",style="solid"];
  Node55 [label="Narrative_Generator.Story\lGraph.DuplicateNodeConnecting",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a3caa66943f727fc97c6a8d255f8a0db9",tooltip="Connects two nodes if both already exist and are in the graph."];
  Node55 -> Node3 [color="steelblue1",style="solid"];
  Node18 -> Node20 [color="steelblue1",style="solid"];
  Node18 -> Node61 [color="steelblue1",style="solid"];
  Node61 [label="Narrative_Generator.Storyworld\lConvergence.ConstraintsControl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a65a8ae1ebd5745f372f8aec0fc879066",tooltip="Checking whether the application of an action would violate the established constraints."];
  Node61 -> Node24 [color="steelblue1",style="solid"];
  Node18 -> Node62 [color="steelblue1",style="solid"];
  Node62 [label="Narrative_Generator.Storyworld\lConvergence.CyclesControl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a8b24e6d35f950febee35af944abef896",tooltip="A method that checks whether the effects of the action under test will cause cycles in the graph."];
  Node62 -> Node3 [color="steelblue1",style="solid"];
  Node62 -> Node12 [color="steelblue1",style="solid"];
  Node62 -> Node13 [color="steelblue1",style="solid"];
  Node62 -> Node14 [color="steelblue1",style="solid"];
  Node18 -> Node69 [color="steelblue1",style="solid"];
  Node69 [label="Narrative_Generator.Storyworld\lConvergence.DeadEndsControl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab2470de3ef2f8ecb825831da3a80b68d",tooltip="A method that checks whether the effects of the action under test will result in a dead end in the gr..."];
  Node69 -> Node24 [color="steelblue1",style="solid"];
  Node18 -> Node71 [color="steelblue1",style="solid"];
  Node71 [label="Narrative_Generator.Storyworld\lConvergence.DuplicateControl",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a9fd047254836b0bec4a91f9cd06c9683",tooltip="A method that checks whether the effects of the checked action will lead to the creation of a node th..."];
  Node18 -> Node55 [color="steelblue1",style="solid"];
  Node18 -> Node59 [color="steelblue1",style="solid"];
  Node59 [label="Narrative_Generator.Story\lNode.GetEdges",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a546432f24cda5eb8081df4866c781feb",tooltip="Returns a list of all edges connected to the this node."];
  Node18 -> Node13 [color="steelblue1",style="solid"];
  Node18 -> Node72 [color="steelblue1",style="solid"];
  Node72 [label="Narrative_Generator.Storyworld\lConvergence.ProbabilityCalculating",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a0fbb8997af07668c9a8962276c53ab92",tooltip="Calculation of the probability of success of the action."];
  Node72 -> Node7 [color="steelblue1",style="solid"];
  Node17 -> Node45 [color="steelblue1",style="solid"];
  Node17 -> Node74 [color="steelblue1",style="solid"];
  Node74 [label="Narrative_Generator.PDDL\l_Module.GeneratePDDLProblem",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_p_d_d_l___module.html#aacd40cc3a1964965144f199800a8b428",tooltip="A method that generates a planning problem, based on the agent's beliefs, in the PDDL language."];
  Node17 -> Node75 [color="steelblue1",style="solid"];
  Node75 [label="Narrative_Generator.Storyworld\lConvergence.MultiAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a27d193b37c3114cc18d690e4846de59c",tooltip="A method that assigns variables (parameters) and checks the constraints of several actions of the sam..."];
  Node75 -> Node18 [color="steelblue1",style="solid"];
  Node75 -> Node76 [color="steelblue1",style="solid"];
  Node76 [label="Narrative_Generator.Agent\lStateDynamic.Clone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_agent_state_dynamic.html#a9c4c58704106854ff310abb99ff59957",tooltip="Deep cloning of an agent."];
  Node75 -> Node83 [color="steelblue1",style="solid"];
  Node83 [label="Narrative_Generator.Agent\lStateStatic.Clone",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_agent_state_static.html#a32adf4a2449433f482775916d9beb111",tooltip="Method for cloning an agent."];
  Node75 -> Node24 [color="steelblue1",style="solid"];
  Node75 -> Node85 [color="steelblue1",style="solid"];
  Node85 [label="Narrative_Generator.CSP\l_Module.MassiveAssignVariables",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_narrative___generator_1_1_c_s_p___module.html#a47d0c1925eae60a0d79aaf0692db44d1",tooltip="Method for assigning parameters to several actions of the same type."];
  Node85 -> Node47 [color="steelblue1",style="solid"];
  Node85 -> Node49 [color="steelblue1",style="solid"];
  Node85 -> Node50 [color="steelblue1",style="solid"];
  Node85 -> Node7 [color="steelblue1",style="solid"];
  Node85 -> Node53 [color="steelblue1",style="solid"];
  Node17 -> Node88 [color="steelblue1",style="solid"];
  Node88 [label="Narrative_Generator.Storyworld\lConvergence.SingleAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a89bee4b7f2aaec44bd5aac2d8f020981",tooltip="A method that assigns variables (parameters) and checks the constraints of one specific action."];
  Node88 -> Node18 [color="steelblue1",style="solid"];
  Node88 -> Node45 [color="steelblue1",style="solid"];
  Node17 -> Node89 [color="steelblue1",style="solid"];
  Node89 [label="Narrative_Generator.Storyworld\lConvergence.SkipTurn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a31d2877f2e912775e91e230e64ef1123",tooltip="To skip a turn (action), an action \"NothingToDo\" is created and applied."];
  Node89 -> Node90 [color="steelblue1",style="solid"];
  Node90 [label="Narrative_Generator.Nothing\lToDo.ApplyEffects",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_nothing_to_do.html#a5916d4a5295b1aa22330a8929badb828",tooltip="A method that changes the passed world state according to the effects of the action."];
  Node16 -> Node9 [color="steelblue1",style="solid"];
  Node16 -> Node91 [color="steelblue1",style="solid"];
  Node91 [label="Narrative_Generator.World\lDynamic.GetAgentByIndex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a082811db2064d6ee86c775bb2843bc92",tooltip="Returns the agent with the specified index."];
  Node16 -> Node7 [color="steelblue1",style="solid"];
  Node16 -> Node15 [color="steelblue1",style="solid"];
  Node16 -> Node92 [color="steelblue1",style="solid"];
  Node92 [label="Narrative_Generator.World\lStatic.IncreaseTurnNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#a7aca92d28d23d64994229347f600ce42",tooltip="Increases the move turn by one."];
}
