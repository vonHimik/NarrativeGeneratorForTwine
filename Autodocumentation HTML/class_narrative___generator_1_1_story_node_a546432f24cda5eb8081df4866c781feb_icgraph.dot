digraph "Narrative_Generator.StoryNode.GetEdges"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="Narrative_Generator.Story\lNode.GetEdges",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Returns a list of all edges connected to the this node."];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.Storyworld\lConvergence.ActionControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab63aeb27180c660c584261acd9e7051d",tooltip="Checking the action for violation of the established constraints and the reachability of the goal sta..."];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Storyworld\lConvergence.ActionRequest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a371ff7aeb10e59e3c51971228ea94378",tooltip="The agent updates his beliefs, calculates a plan, chooses an action, assigns variables to it,..."];
  Node3 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.Story\lAlgorithm.Step",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14fcd8daa5dd92cef5b985a754ffa59e",tooltip="Convergence in turn asks agents for actions, checks them, applies them, counteracts them,..."];
  Node4 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.Story\lAlgorithm.BFSTraversing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a7791dc587915617de53183d85424e7aa",tooltip="A method in which we sequentially create a story graph, node by node, starting at the root,..."];
  Node5 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.Story\lAlgorithm.CreateStoryGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14b46d881caea879deaf6900c24930c1",tooltip="The method that controls the creation of the story graph."];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.Story\lAlgorithm.Start",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a84193cf4bd94e0c652a31dbb175214d1",tooltip="Method is an entry point that controls the operation of the algorithm (the sequence of launching othe..."];
  Node2 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Storyworld\lConvergence.MultiAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a27d193b37c3114cc18d690e4846de59c",tooltip="A method that assigns variables (parameters) and checks the constraints of several actions of the sam..."];
  Node8 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node2 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Storyworld\lConvergence.SingleAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a89bee4b7f2aaec44bd5aac2d8f020981",tooltip="A method that assigns variables (parameters) and checks the constraints of one specific action."];
  Node9 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.Twine\lGraphConstructor.AddNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a11d69d897952a7af20c3c8bd7831c937",tooltip="A method that creates text for an individual node."];
  Node10 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.Twine\lGraphConstructor.CreateTwineGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a791e9c39f029bb3cafd20ad6ceae1b74",tooltip="A method for converting a story graph into an interactive story for Twine."];
  Node11 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.Twine\lGraphConstructor.AddText",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a667523a4748d26fa3a33fe215a641f24",tooltip="Method for creating a description of the reached node."];
  Node12 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node13 [dir="back",color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.Edge.\lClearLowerNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#abe257059d754af7ce9b85e25c8de6c8c",tooltip="This method clears the bottom vertex of an edge from a connected node."];
  Node13 -> Node14 [dir="back",color="steelblue1",style="solid"];
  Node14 [label="Narrative_Generator.Edge.\lClearEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#a7a51f9a218902782b289e949def0abdc",tooltip="This method completely clears the edge, removing both nodes attached to it and the action attached to..."];
  Node13 -> Node15 [dir="back",color="steelblue1",style="solid"];
  Node15 [label="Narrative_Generator.Storyworld\lConvergence.CyclesControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a8b24e6d35f950febee35af944abef896",tooltip="A method that checks whether the effects of the action under test will cause cycles in the graph."];
  Node1 -> Node16 [dir="back",color="steelblue1",style="solid"];
  Node16 [label="Narrative_Generator.Edge.\lClearUpperNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#ac4df3c6f37a68162ce9f1feaf7aed164",tooltip="This method clears the top vertex of an edge from a connected node."];
  Node16 -> Node14 [dir="back",color="steelblue1",style="solid"];
  Node16 -> Node15 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node17 [dir="back",color="steelblue1",style="solid"];
  Node17 [label="Narrative_Generator.GraphÐ¡onstructor.\lCreateGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_graph_xD0_xA1onstructor.html#a118f6271ee78d62a921a2f99c7112388",tooltip="A method that describes the transmitted story graph in text format and creates a visualization based ..."];
  Node17 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node17 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node18 [dir="back",color="steelblue1",style="solid"];
  Node18 [label="Narrative_Generator.Story\lNode.isChild",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#adf447335ba1946ef22e58f359c098a66",tooltip="Checks if this node is a child of the specified node."];
  Node18 -> Node19 [dir="back",color="steelblue1",style="solid"];
  Node19 [label="Narrative_Generator.Story\lGraph.DuplicateNodeConnecting",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a3caa66943f727fc97c6a8d255f8a0db9",tooltip="Connects two nodes if both already exist and are in the graph."];
  Node19 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node19 -> Node20 [dir="back",color="steelblue1",style="solid"];
  Node20 [label="Narrative_Generator.Storyworld\lConvergence.ActionCounteract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#add86637023cb151bb7e6ec3483cd500a",tooltip="A method that implements the system's response to an action that should not be applied."];
  Node20 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node21 [dir="back",color="steelblue1",style="solid"];
  Node21 [label="Narrative_Generator.Actions\lRestricting.IsSatisfied",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_actions_restricting.html#a3691a868f1d5651f63c812c349b6ef3c",tooltip="A method that checks whether the specified world state satisfies constraints."];
  Node1 -> Node22 [dir="back",color="steelblue1",style="solid"];
  Node22 [label="Narrative_Generator.Restricting\lLocationAvailability.IsSatisfied",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_restricting_location_availability.html#a218257fdc27aaac415e6f1090c7b327f",tooltip="OA method that checks whether the specified world state satisfies constraints."];
}
