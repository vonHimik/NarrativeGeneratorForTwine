digraph "Narrative_Generator.StoryNode.GetLinks"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="Narrative_Generator.Story\lNode.GetLinks",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Returns a list of all nodes connected to this node."];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.Story\lAlgorithm.BFSGoalAchieveControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a642de71021abf927ab6f4630287e3304",tooltip="A method that traverses the graph according to the concept of breadth-first search and determines the..."];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Story\lAlgorithm.CreateStoryGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#af62b9aaf409a5a30248c0fc5f0055723",tooltip="The method that controls the creation of the story graph."];
  Node3 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.Story\lAlgorithm.Start",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a5adcd998433cb838e814c1eb81ea753d",tooltip="Method is an entry point that controls the operation of the algorithm (the sequence of launching othe..."];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.Story\lAlgorithm.BFSTraversing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a7791dc587915617de53183d85424e7aa",tooltip="A method in which we sequentially create a story graph, node by node, starting at the root,..."];
  Node5 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.Story\lNode.DeleteLink",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#add2f3d956c15eba37d8024ae708bb86f",tooltip="If the specified node is among the list of nodes linked with this node, then the link will be deleted..."];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.Storyworld\lConvergence.CyclesControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a8b24e6d35f950febee35af944abef896",tooltip="A method that checks whether the effects of the action under test will cause cycles in the graph."];
  Node7 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Storyworld\lConvergence.ActionControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab63aeb27180c660c584261acd9e7051d",tooltip="Checking the action for violation of the established constraints and the reachability of the goal sta..."];
  Node8 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Storyworld\lConvergence.ActionRequest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a371ff7aeb10e59e3c51971228ea94378",tooltip="The agent updates his beliefs, calculates a plan, chooses an action, assigns variables to it,..."];
  Node9 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.Story\lAlgorithm.Step",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14fcd8daa5dd92cef5b985a754ffa59e",tooltip="Convergence in turn asks agents for actions, checks them, applies them, counteracts them,..."];
  Node10 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node8 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.Storyworld\lConvergence.MultiAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a27d193b37c3114cc18d690e4846de59c",tooltip="A method that assigns variables (parameters) and checks the constraints of several actions of the sam..."];
  Node11 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node8 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.Storyworld\lConvergence.SingleAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a89bee4b7f2aaec44bd5aac2d8f020981",tooltip="A method that assigns variables (parameters) and checks the constraints of one specific action."];
  Node12 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node13 [dir="back",color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.Storyworld\lConvergence.TarjanAlgStep",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#afd7eff6c34ea2d8177b40b45ed9efb10",tooltip="A method that implements an algorithm that checks for the presence of a cycle in a graph."];
  Node13 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node13 -> Node13 [dir="back",color="steelblue1",style="solid"];
}
