digraph "Narrative_Generator.TwineGraphConstructor.AddEdge"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="Narrative_Generator.Twine\lGraphConstructor.AddEdge",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="A method that creates a representation of an edge in a graph - in Twine it is a connection between no..."];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.Twine\lGraphConstructor.AddFightNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a2564c4abf0c8bf471810ce8cf78d3769",tooltip="An optional node that describes the result of the fight action and provides details."];
  Node2 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Twine\lGraphConstructor.AddSpecialNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a324be232bfef7d9042f243bc2d8d8e68",tooltip="A method for creating special nodes that are not originally present in the graph."];
  Node2 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.Twine\lGraphConstructor.InsertSpaces",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a93c90b8b66be571d8d833f952417ce64",tooltip="A method that separates compound words into separate ones, using capital letters as a separator."];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.Twine\lGraphConstructor.AddIntermediateNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a4a2e0895797d89c49227c800d9831ed2",tooltip="A method for creating a node that is used to create a contextual relationship between other nodes."];
  Node5 -> Node3 [color="steelblue1",style="solid"];
  Node5 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.World\lDynamic.GetAgentByRole",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a0514a97e9b85397137dd80125581cf61",tooltip="Returns the first founded agent with the specified role."];
  Node5 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.Story\lNode.GetWorldState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#ab3e318148d1f96d599db8611347b42fb",tooltip="Returns the storyworld state stored by the node."];
  Node5 -> Node4 [color="steelblue1",style="solid"];
  Node1 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Twine\lGraphConstructor.AddInvestigateNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a3557e0657349f1c93b30d9ddea327e2d",tooltip="An optional node that describes the result of the search evidences action and provides details."];
  Node8 -> Node3 [color="steelblue1",style="solid"];
  Node8 -> Node6 [color="steelblue1",style="solid"];
  Node8 -> Node7 [color="steelblue1",style="solid"];
  Node8 -> Node4 [color="steelblue1",style="solid"];
  Node1 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Story\lNode.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a0b05d9dcfa6423f4247cceba1ad62eef",tooltip="Method for comparing two StoryNode instance."];
  Node9 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.World\lDynamic.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a3b7c061efc8d23cb561bc940800e6a48",tooltip="Method for comparing two WorldDynamic instance."];
  Node10 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.World\lStatic.Equals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#aac70b40850296f313ceaf4f0bcad1549",tooltip="Method for comparing two WorldStatic instance."];
  Node11 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.World\lStatic.GetTurnNumber",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#addfc6eedbd7e250cca63bec54ef714a7",tooltip="Returns the turn number."];
  Node10 -> Node13 [color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.World\lDynamic.GetStaticWorldPart",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#af84d5b47653c246de39ebfa7b791826a",tooltip="Returns a component with the static part of the state of this storyworld."];
  Node1 -> Node14 [color="steelblue1",style="solid"];
  Node14 [label="Narrative_Generator.Edge.\lGetAction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#af4cf57a1cc22a025d7a9cbb697097c16",tooltip="This method returns the action attached to this edge."];
  Node1 -> Node15 [color="steelblue1",style="solid"];
  Node15 [label="Narrative_Generator.Edge.\lGetLowerNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#aab549aff7f3d2a7181902be614cdcc61",tooltip="This method returns the node attached to the bottom vertex of this edge."];
  Node1 -> Node16 [color="steelblue1",style="solid"];
  Node16 [label="Narrative_Generator.Story\lNode.GetNumberInSequence",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a2343338ef2f1461d7c3af6e54d7f5d9f",tooltip="Returns the sequence number of this node."];
  Node1 -> Node17 [color="steelblue1",style="solid"];
  Node17 [label="Narrative_Generator.Edge.\lGetUpperNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_edge.html#a53ec80be25b5c5ddcd633e5d1916e98c",tooltip="This method returns the node attached to the top vertex of this edge."];
  Node1 -> Node4 [color="steelblue1",style="solid"];
  Node1 -> Node18 [color="steelblue1",style="solid"];
  Node18 [label="Narrative_Generator.Plan\lAction.ReturnOriginal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_plan_action.html#a6050f27ca8a5f3ab4e8f7b10d66c4da0",tooltip="In counter-actions, returns the name of the action that caused the system to react."];
  Node1 -> Node19 [color="steelblue1",style="solid"];
  Node19 [label="Narrative_Generator.Twine\lGraphConstructor.SearchNextNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a0d62d4881f4ac5bd4fc09d7a2b90a1c4",tooltip="Method for finding the next node in which the right to act is passed to the player."];
  Node19 -> Node20 [color="steelblue1",style="solid"];
  Node20 [label="Narrative_Generator.Story\lNode.GetActivePlayer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#afff95dd2a4192c3088c243f8c23302e4",tooltip="Returns the player's activity status in the state stored by this node."];
  Node19 -> Node21 [color="steelblue1",style="solid"];
  Node21 [label="Narrative_Generator.Story\lNode.GetEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a75f2c93d3724997297d8311f2c715399",tooltip="Returns the specified edge from the list of edges connected to the this node."];
  Node19 -> Node22 [color="steelblue1",style="solid"];
  Node22 [label="Narrative_Generator.Story\lNode.GetFirstEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a9e010bf5ca4801abde5e47eb8c9988a8",tooltip="Returns the first edge from a list of all edges connected to the this node."];
  Node19 -> Node23 [color="steelblue1",style="solid"];
  Node23 [label="Narrative_Generator.Story\lNode.GetLastEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_node.html#a5c6172671b9fe780c0fce4befd03234e",tooltip="Returns the last edge from a list of all edges connected to the this node."];
  Node19 -> Node15 [color="steelblue1",style="solid"];
  Node19 -> Node16 [color="steelblue1",style="solid"];
  Node19 -> Node24 [color="steelblue1",style="solid"];
  Node24 [label="Narrative_Generator.World\lStatic.GetSetting",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_static.html#ad19d52cc2e6443e1d79d6edbd5eef9ea",tooltip="Returns information about the current setting."];
  Node19 -> Node13 [color="steelblue1",style="solid"];
  Node19 -> Node17 [color="steelblue1",style="solid"];
  Node19 -> Node7 [color="steelblue1",style="solid"];
}
