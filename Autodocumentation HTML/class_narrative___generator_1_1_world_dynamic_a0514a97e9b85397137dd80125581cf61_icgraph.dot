digraph "Narrative_Generator.WorldDynamic.GetAgentByRole"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="Narrative_Generator.World\lDynamic.GetAgentByRole",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Returns the first founded agent with the specified role."];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.Twine\lGraphConstructor.AddIntermediateNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a4a2e0895797d89c49227c800d9831ed2",tooltip="A method for creating a node that is used to create a contextual relationship between other nodes."];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Twine\lGraphConstructor.AddEdge",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a3cc543ef2ad669f20d596ece8a6a51a1",tooltip="A method that creates a representation of an edge in a graph - in Twine it is a connection between no..."];
  Node3 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.Twine\lGraphConstructor.AddNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a11d69d897952a7af20c3c8bd7831c937",tooltip="A method that creates text for an individual node."];
  Node4 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.Twine\lGraphConstructor.CreateTwineGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a791e9c39f029bb3cafd20ad6ceae1b74",tooltip="A method for converting a story graph into an interactive story for Twine."];
  Node5 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.Story\lAlgorithm.Start",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a84193cf4bd94e0c652a31dbb175214d1",tooltip="Method is an entry point that controls the operation of the algorithm (the sequence of launching othe..."];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.Twine\lGraphConstructor.AddInvestigateNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_twine_graph_constructor.html#a3557e0657349f1c93b30d9ddea327e2d",tooltip="An optional node that describes the result of the search evidences action and provides details."];
  Node7 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Story\lAlgorithm.CreateConstraints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a2170a99b955e35b088b310b1ee1b0f46",tooltip="A method that defines the constraints imposed on the story."];
  Node8 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Storyworld\lConvergence.DeadEndsControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab2470de3ef2f8ecb825831da3a80b68d",tooltip="A method that checks whether the effects of the action under test will result in a dead end in the gr..."];
  Node9 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.Storyworld\lConvergence.ActionControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab63aeb27180c660c584261acd9e7051d",tooltip="Checking the action for violation of the established constraints and the reachability of the goal sta..."];
  Node10 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.Storyworld\lConvergence.ActionRequest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a371ff7aeb10e59e3c51971228ea94378",tooltip="The agent updates his beliefs, calculates a plan, chooses an action, assigns variables to it,..."];
  Node11 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.Story\lAlgorithm.Step",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14fcd8daa5dd92cef5b985a754ffa59e",tooltip="Convergence in turn asks agents for actions, checks them, applies them, counteracts them,..."];
  Node12 -> Node13 [dir="back",color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.Story\lAlgorithm.BFSTraversing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a7791dc587915617de53183d85424e7aa",tooltip="A method in which we sequentially create a story graph, node by node, starting at the root,..."];
  Node13 -> Node14 [dir="back",color="steelblue1",style="solid"];
  Node14 [label="Narrative_Generator.Story\lAlgorithm.CreateStoryGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14b46d881caea879deaf6900c24930c1",tooltip="The method that controls the creation of the story graph."];
  Node14 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node10 -> Node15 [dir="back",color="steelblue1",style="solid"];
  Node15 [label="Narrative_Generator.Storyworld\lConvergence.MultiAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a27d193b37c3114cc18d690e4846de59c",tooltip="A method that assigns variables (parameters) and checks the constraints of several actions of the sam..."];
  Node15 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node10 -> Node16 [dir="back",color="steelblue1",style="solid"];
  Node16 [label="Narrative_Generator.Storyworld\lConvergence.SingleAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a89bee4b7f2aaec44bd5aac2d8f020981",tooltip="A method that assigns variables (parameters) and checks the constraints of one specific action."];
  Node16 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node17 [dir="back",color="steelblue1",style="solid"];
  Node17 [label="Narrative_Generator.ToBe\lAWitness.PreCheckPrecondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_to_be_a_witness.html#aff274bb30334f6b2d73c08b703017f8b",tooltip="A method that checks the most basic preconditions for an action."];
  Node17 -> Node18 [dir="back",color="steelblue1",style="solid"];
  Node18 [label="Narrative_Generator.Action\lGenerator.GetAvailableActions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_action_generator.html#a4452d6b604097b3e5f892d2267d1ff40",tooltip="A method that returns all valid NOW actions for the agent, given the context."];
  Node18 -> Node19 [dir="back",color="steelblue1",style="solid"];
  Node19 [label="Narrative_Generator.Agent\lStateDynamic.ReceiveAvailableActions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_agent_state_dynamic.html#a3763f0932f3cd8e9615b67ce43dbf4dd",tooltip="Populates the list of actions available to the agent."];
}
