digraph "Narrative_Generator.WorldDynamic.GetAgentByName"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="Narrative_Generator.World\lDynamic.GetAgentByName",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Returns the first founded agent with the specified name."];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Narrative_Generator.CSP\l_Module.AssignVariables",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_c_s_p___module.html#a004316ef422555e62376b259b9fc8e1d",tooltip="A method that assigns parameters to an action."];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Narrative_Generator.Storyworld\lConvergence.ActionCounteract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#add86637023cb151bb7e6ec3483cd500a",tooltip="A method that implements the system's response to an action that should not be applied."];
  Node3 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Narrative_Generator.Storyworld\lConvergence.ActionControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#ab63aeb27180c660c584261acd9e7051d",tooltip="Checking the action for violation of the established constraints and the reachability of the goal sta..."];
  Node4 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="Narrative_Generator.Storyworld\lConvergence.ActionRequest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a371ff7aeb10e59e3c51971228ea94378",tooltip="The agent updates his beliefs, calculates a plan, chooses an action, assigns variables to it,..."];
  Node5 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Narrative_Generator.Story\lAlgorithm.Step",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a14fcd8daa5dd92cef5b985a754ffa59e",tooltip="Convergence in turn asks agents for actions, checks them, applies them, counteracts them,..."];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Narrative_Generator.Story\lAlgorithm.BFSTraversing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a7791dc587915617de53183d85424e7aa",tooltip="A method in which we sequentially create a story graph, node by node, starting at the root,..."];
  Node7 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Narrative_Generator.Story\lAlgorithm.CreateStoryGraph",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#af62b9aaf409a5a30248c0fc5f0055723",tooltip="The method that controls the creation of the story graph."];
  Node8 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Narrative_Generator.Story\lAlgorithm.Start",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a5adcd998433cb838e814c1eb81ea753d",tooltip="Method is an entry point that controls the operation of the algorithm (the sequence of launching othe..."];
  Node4 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="Narrative_Generator.Storyworld\lConvergence.MultiAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a27d193b37c3114cc18d690e4846de59c",tooltip="A method that assigns variables (parameters) and checks the constraints of several actions of the sam..."];
  Node10 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node4 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="Narrative_Generator.Storyworld\lConvergence.SingleAVandAC",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a89bee4b7f2aaec44bd5aac2d8f020981",tooltip="A method that assigns variables (parameters) and checks the constraints of one specific action."];
  Node11 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node2 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node2 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="Narrative_Generator.Story\lAlgorithm.CreateConstraints",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_algorithm.html#a2170a99b955e35b088b310b1ee1b0f46",tooltip="A method that defines the constraints imposed on the story."];
  Node12 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node13 [dir="back",color="steelblue1",style="solid"];
  Node13 [label="Narrative_Generator.Story\lGraph.CreateNewNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a7e65058643b6db885dcb604cb6b8896b",tooltip="Create a new node for the storygraph and inserts it."];
  Node13 -> Node14 [dir="back",color="steelblue1",style="solid"];
  Node14 [label="Narrative_Generator.Storyworld\lConvergence.ApplyAction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a445039b4f3958e2e00953e09ed37bde9",tooltip="The probability of success of the action is calculated, and if successful, it is applied."];
  Node14 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node14 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node15 [dir="back",color="steelblue1",style="solid"];
  Node15 [label="Narrative_Generator.Story\lGraph.CreateTestNode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#aff8960e72e0b1ecad9ca63c25517c5dc",tooltip="This method creates a node with the specified parameters, which will then be deleted."];
  Node15 -> Node16 [dir="back",color="steelblue1",style="solid"];
  Node16 [label="Narrative_Generator.Storyworld\lConvergence.CyclesControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a8b24e6d35f950febee35af944abef896",tooltip="A method that checks whether the effects of the action under test will cause cycles in the graph."];
  Node16 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node15 -> Node17 [dir="back",color="steelblue1",style="solid"];
  Node17 [label="Narrative_Generator.Storyworld\lConvergence.DuplicateControl",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_storyworld_convergence.html#a9fd047254836b0bec4a91f9cd06c9683",tooltip="A method that checks whether the effects of the checked action will lead to the creation of a node th..."];
  Node17 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node15 -> Node18 [dir="back",color="steelblue1",style="solid"];
  Node18 [label="Narrative_Generator.Story\lGraph.DuplicateNodeConnecting",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_story_graph.html#a3caa66943f727fc97c6a8d255f8a0db9",tooltip="Connects two nodes if both already exist and are in the graph."];
  Node18 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node18 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node19 [dir="back",color="steelblue1",style="solid"];
  Node19 [label="Narrative_Generator.World\lDynamic.GetRandomAgent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#ad561dd7547445ee026bfa2eb0b8262ef",tooltip="A method that returns a random agent from the list of agents, except for the agent that initiates the..."];
  Node1 -> Node20 [dir="back",color="steelblue1",style="solid"];
  Node20 [label="Narrative_Generator.World\lDynamic.GetRandomAgentInMyLocation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_world_dynamic.html#a823d39a91e95337fa0e50ef7207c5b41",tooltip="A method that returns a random agent from the list of agents in the location with the agent that will..."];
  Node1 -> Node21 [dir="back",color="steelblue1",style="solid"];
  Node21 [label="Narrative_Generator.Constraint\lAlive.IsSatisfied",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_constraint_alive.html#a5214eecee7b2639bd17177e6877d7746",tooltip="A method that checks whether the specified world state satisfies constraints."];
  Node1 -> Node22 [dir="back",color="steelblue1",style="solid"];
  Node22 [label="Narrative_Generator.Restricting\lLocationAvailability.IsSatisfied",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_restricting_location_availability.html#a218257fdc27aaac415e6f1090c7b327f",tooltip="OA method that checks whether the specified world state satisfies constraints."];
  Node1 -> Node23 [dir="back",color="steelblue1",style="solid"];
  Node23 [label="Narrative_Generator.Fight.\lPreCheckPrecondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_fight.html#af781f29a14d019b77c50c28638fc1723",tooltip="A method that checks the most basic preconditions for an action."];
  Node23 -> Node24 [dir="back",color="steelblue1",style="solid"];
  Node24 [label="Narrative_Generator.Action\lGenerator.GetAvailableActions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_action_generator.html#a4452d6b604097b3e5f892d2267d1ff40",tooltip="A method that returns all valid NOW actions for the agent, given the context."];
  Node24 -> Node25 [dir="back",color="steelblue1",style="solid"];
  Node25 [label="Narrative_Generator.Agent\lStateDynamic.ReceiveAvailableActions",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_agent_state_dynamic.html#a3763f0932f3cd8e9615b67ce43dbf4dd",tooltip="Populates the list of actions available to the agent."];
  Node1 -> Node26 [dir="back",color="steelblue1",style="solid"];
  Node26 [label="Narrative_Generator.Neutralize\lKiller.PreCheckPrecondition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_narrative___generator_1_1_neutralize_killer.html#ab3ad901a419f5b558896879812cf5f98",tooltip="A method that checks the most basic preconditions for an action."];
  Node26 -> Node24 [dir="back",color="steelblue1",style="solid"];
}
