(define (domain detective-domain)

   (:predicates (ROOM ?x) (AGENT ?x) (KILLER ?x) (PLAYER ?x)
                (alive ?x) (died ?x)
                (in-room ?x ?y)
                (want-go-to ?x ?y)
                (thinks-is-a-killer ?x ?y)
                (found-evidence-against ?x ?y)
                (scared ?x) (angry-at ?x ?y)
                (explored-room ?x ?y)
                (contains-evidence ?x)
                (connected ?x ?y)
   )

(:action player_move :parameters (?p ?room-from ?room-to)
:precondition (and (ROOM ?room-from) (ROOM ?room-to) (PLAYER ?p)
                   (alive ?p)
                   (in-room ?p ?room-from)
                   (not (died ?p)) (not (in-room ?p ?room-to))
                   (connected ?room-from ?room-to)
              )
:effect (and (in-room ?p ?room-to)
             (not (in-room ?p ?room-from))))
             
             
(:action to-be-a-witness :parameters (?p ?victim ?k ?place)
:precondition (and (ROOM ?place) (PLAYER ?p) (KILLER ?k)
                   (alive ?p) (alive ?k) (died ?victim)
                   (in-room ?p ?place) (in-room ?victim ?place) (in-room ?k ?place)
               )
:effect (and (thinks-is-a-killer ?p ?k)
         )
)
             

(:action investigate-room :parameters (?p ?room)
:precondition (and (ROOM ?room) (PLAYER ?p)
                   (alive ?p)
                   (in-room ?p ?room)
                   (not (died ?p)) 
               )
:effect (and (explored-room ?p ?room)
         )
 )

(:action tell-about-killer :parameters (?p ?a ?place ?k)
:precondition (and (ROOM ?place) (PLAYER ?p) (AGENT ?a) (KILLER ?k)
                   (alive ?p) (alive ?a) (alive ?k)
                   (in-room ?p ?place) (in-room ?a ?place)
                   (found-evidence-against ?p ?k)
               )
:effect (and (thinks-is-a-killer ?a ?k) (angry-at ?a ?k)
         )
)

(:action neutralize-killer :parameters (?p ?k ?place)
:precondition (and (ROOM ?place) (KILLER ?k) (PLAYER ?p)
                   (alive ?k) (alive ?p)
                   (in-room ?p ?place) (in-room ?k ?place)
                   (thinks-is-a-killer ?p ?k)
               )
:effect (and (died ?k) (not (alive ?k))
         )
)

(:action reassure :parameters (?a1 ?p ?a2 ?k ?place)
:precondition (and (ROOM ?place) (AGENT ?a1) (PLAYER ?p) (AGENT ?a2) (KILLER ?k)
                   (alive ?a1) (alive ?p)
                   (in-room ?a1 ?place) (in-room ?p ?place)
                   (or (angry-at ?a1 ?a2) (angry-at ?a1 ?k))
                   (not (thinks-is-a-killer ?p ?k))
               )
:effect (and (not (angry-at ?a1 ?a2)) (not (angry-at ?a1 ?k))
         )
)

(:action nothing-to-do :parameters (?p)
:precondition (and (PLAYER ?p)
                   (alive ?p)
               )
:effect (alive ?p)
)


)